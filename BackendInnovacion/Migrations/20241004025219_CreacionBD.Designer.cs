// <auto-generated />
using System;
using BackendInnovacion.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendInnovacion.Migrations
{
    [DbContext(typeof(InnovacionContext))]
    [Migration("20241004025219_CreacionBD")]
    partial class CreacionBD
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackendInnovacion.Models.AaRc", b =>
                {
                    b.Property<int>("ActivAcademicaId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("RegistroCalificadoId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("Componente")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Semestre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("ActivAcademicaId", "RegistroCalificadoId");

                    b.HasIndex("RegistroCalificadoId");

                    b.ToTable("AaRcs");
                });

            modelBuilder.Entity("BackendInnovacion.Models.Acreditacion", b =>
                {
                    b.Property<int>("Resolucion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Resolucion"));

                    b.Property<string>("Calificacion")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("Date");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("Date");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Resolucion");

                    b.HasIndex("ProgramaId");

                    b.ToTable("Acreditaciones");
                });

            modelBuilder.Entity("BackendInnovacion.Models.ActivAcademica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaFormacion")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("Diseno")
                        .HasColumnType("int");

                    b.Property<string>("EntidadEspejo")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int?>("Espejo")
                        .HasColumnType("int");

                    b.Property<int>("Hacom")
                        .HasColumnType("int");

                    b.Property<int>("Hindep")
                        .HasColumnType("int");

                    b.Property<string>("Idioma")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("NumCreditos")
                        .HasColumnType("int");

                    b.Property<string>("PaisEspejo")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("ProgramaId");

                    b.ToTable("ActivAcademicas");
                });

            modelBuilder.Entity("BackendInnovacion.Models.Aliado", b =>
                {
                    b.Property<int>("Nit")
                        .HasColumnType("int");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NombreContacto")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Nit");

                    b.ToTable("Aliados");
                });

            modelBuilder.Entity("BackendInnovacion.Models.Alianza", b =>
                {
                    b.Property<int>("AliadoId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("Date");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("Date");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.HasKey("AliadoId", "DepartamentoId");

                    b.HasIndex("ProgramaId");

                    b.ToTable("Alianzas");
                });

            modelBuilder.Entity("BackendInnovacion.Models.AnPrograma", b =>
                {
                    b.Property<int>("AspectoNormativoId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("AspectoNormativoId", "ProgramaId");

                    b.HasIndex("ProgramaId");

                    b.ToTable("AnProgramas");
                });

            modelBuilder.Entity("BackendInnovacion.Models.AreaConocimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Disciplina")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("GranArea")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("AreasConocimiento");
                });

            modelBuilder.Entity("BackendInnovacion.Models.AspectoNormativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Fuente")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("AspectosNormativos");
                });

            modelBuilder.Entity("BackendInnovacion.Models.CarInnovacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("CarInnovaciones");
                });

            modelBuilder.Entity("BackendInnovacion.Models.DocenteDepartamento", b =>
                {
                    b.Property<int>("DocenteId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("Dedicacion")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("FechaSalida")
                        .HasColumnType("Date");

                    b.Property<string>("Modalidad")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.HasKey("DocenteId", "DepartamentoId");

                    b.HasIndex("ProgramaId");

                    b.ToTable("DocenteDepartamentos");
                });

            modelBuilder.Entity("BackendInnovacion.Models.Enfoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Enfoques");
                });

            modelBuilder.Entity("BackendInnovacion.Models.EnfoqueRC", b =>
                {
                    b.Property<int>("EnfoqueId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("RegistroCalificadoId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("EnfoqueId", "RegistroCalificadoId");

                    b.HasIndex("RegistroCalificadoId");

                    b.ToTable("EnfoquesRCs");
                });

            modelBuilder.Entity("BackendInnovacion.Models.Facultad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaFun")
                        .HasColumnType("Date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("UniversidadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UniversidadId");

                    b.ToTable("Facultades");
                });

            modelBuilder.Entity("BackendInnovacion.Models.Pasantia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramaId");

                    b.ToTable("Pasantias");
                });

            modelBuilder.Entity("BackendInnovacion.Models.PracticaEstrategia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("PracticasEstrategias");
                });

            modelBuilder.Entity("BackendInnovacion.Models.Premio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("EntidadOtorgante")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("Date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramaId");

                    b.ToTable("Premios");
                });

            modelBuilder.Entity("BackendInnovacion.Models.Programa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantGraduados")
                        .HasColumnType("int");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("FacultadId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("FechaCierre")
                        .HasColumnType("Date");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("Date");

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("NumeroCohortes")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("FacultadId");

                    b.ToTable("Programas");
                });

            modelBuilder.Entity("BackendInnovacion.Models.ProgramaAC", b =>
                {
                    b.Property<int>("ProgramaId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("AreaConocimientoId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("ProgramaId", "AreaConocimientoId");

                    b.HasIndex("AreaConocimientoId");

                    b.ToTable("ProgramaACs");
                });

            modelBuilder.Entity("BackendInnovacion.Models.ProgramaCI", b =>
                {
                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<int>("CarInnovacionId")
                        .HasColumnType("int");

                    b.HasKey("ProgramaId", "CarInnovacionId");

                    b.HasIndex("CarInnovacionId");

                    b.ToTable("ProgramaCIs");
                });

            modelBuilder.Entity("BackendInnovacion.Models.ProgramaPE", b =>
                {
                    b.Property<int>("ProgramaId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("PracticaEstrategiaId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("ProgramaId", "PracticaEstrategiaId");

                    b.HasIndex("PracticaEstrategiaId");

                    b.ToTable("ProgramaPEs");
                });

            modelBuilder.Entity("BackendInnovacion.Models.RegistroCalificado", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<int>("CantCreditos")
                        .HasColumnType("int");

                    b.Property<string>("DuracionAños")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("DuracionSemestres")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("Date");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("Date");

                    b.Property<string>("HoraAcom")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("HoraInd")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Metodologia")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<string>("TipoTitulacion")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Codigo");

                    b.HasIndex("ProgramaId");

                    b.ToTable("RegistrosCalificados");
                });

            modelBuilder.Entity("BackendInnovacion.Models.Universidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Universidades");
                });

            modelBuilder.Entity("BackendInnovacion.Models.AaRc", b =>
                {
                    b.HasOne("BackendInnovacion.Models.ActivAcademica", "ActivAcademica")
                        .WithMany()
                        .HasForeignKey("ActivAcademicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendInnovacion.Models.RegistroCalificado", "RegistroCalificado")
                        .WithMany("AaRcs")
                        .HasForeignKey("RegistroCalificadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ActivAcademica");

                    b.Navigation("RegistroCalificado");
                });

            modelBuilder.Entity("BackendInnovacion.Models.Acreditacion", b =>
                {
                    b.HasOne("BackendInnovacion.Models.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("BackendInnovacion.Models.ActivAcademica", b =>
                {
                    b.HasOne("BackendInnovacion.Models.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("BackendInnovacion.Models.Alianza", b =>
                {
                    b.HasOne("BackendInnovacion.Models.Aliado", "Aliado")
                        .WithMany()
                        .HasForeignKey("AliadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendInnovacion.Models.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aliado");

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("BackendInnovacion.Models.AnPrograma", b =>
                {
                    b.HasOne("BackendInnovacion.Models.AspectoNormativo", "AspectoNormativo")
                        .WithMany()
                        .HasForeignKey("AspectoNormativoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendInnovacion.Models.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AspectoNormativo");

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("BackendInnovacion.Models.DocenteDepartamento", b =>
                {
                    b.HasOne("BackendInnovacion.Models.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("BackendInnovacion.Models.EnfoqueRC", b =>
                {
                    b.HasOne("BackendInnovacion.Models.Enfoque", "Enfoque")
                        .WithMany()
                        .HasForeignKey("EnfoqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendInnovacion.Models.RegistroCalificado", "RegistroCalificado")
                        .WithMany()
                        .HasForeignKey("RegistroCalificadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enfoque");

                    b.Navigation("RegistroCalificado");
                });

            modelBuilder.Entity("BackendInnovacion.Models.Facultad", b =>
                {
                    b.HasOne("BackendInnovacion.Models.Universidad", "Universidad")
                        .WithMany()
                        .HasForeignKey("UniversidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Universidad");
                });

            modelBuilder.Entity("BackendInnovacion.Models.Pasantia", b =>
                {
                    b.HasOne("BackendInnovacion.Models.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("BackendInnovacion.Models.Premio", b =>
                {
                    b.HasOne("BackendInnovacion.Models.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("BackendInnovacion.Models.Programa", b =>
                {
                    b.HasOne("BackendInnovacion.Models.Facultad", "Facultad")
                        .WithMany()
                        .HasForeignKey("FacultadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facultad");
                });

            modelBuilder.Entity("BackendInnovacion.Models.ProgramaAC", b =>
                {
                    b.HasOne("BackendInnovacion.Models.AreaConocimiento", "AreaConocimiento")
                        .WithMany()
                        .HasForeignKey("AreaConocimientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendInnovacion.Models.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AreaConocimiento");

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("BackendInnovacion.Models.ProgramaCI", b =>
                {
                    b.HasOne("BackendInnovacion.Models.CarInnovacion", "CarInnovacion")
                        .WithMany()
                        .HasForeignKey("CarInnovacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendInnovacion.Models.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarInnovacion");

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("BackendInnovacion.Models.ProgramaPE", b =>
                {
                    b.HasOne("BackendInnovacion.Models.PracticaEstrategia", "PracticaEstrategia")
                        .WithMany()
                        .HasForeignKey("PracticaEstrategiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendInnovacion.Models.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PracticaEstrategia");

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("BackendInnovacion.Models.RegistroCalificado", b =>
                {
                    b.HasOne("BackendInnovacion.Models.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("BackendInnovacion.Models.RegistroCalificado", b =>
                {
                    b.Navigation("AaRcs");
                });
#pragma warning restore 612, 618
        }
    }
}
